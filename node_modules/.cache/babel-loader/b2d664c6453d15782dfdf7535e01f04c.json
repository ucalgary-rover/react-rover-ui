{"ast":null,"code":"var _jsxFileName = \"/home/shivamdesai/Desktop/rover/react-rover-ui/src/components/MapControlPanel.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport EventEmitter2 from 'eventemitter2';\nimport ROSLIB from 'roslib';\nimport { csv } from 'd3';\nimport csvFilePath from './waypoints.csv';\nimport { MapView } from './MapView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ros = new ROSLIB.Ros({\n  url: 'ws://localhost:9090'\n});\nros.on('connection', function () {\n  console.log('Connected to websocket server');\n});\nros.on('error', function (error) {\n  console.log('Error connecting to websocket server: ', error);\n});\nros.on('close', function () {\n  console.log('Connection to websocket server closed.');\n});\nvar listener = new ROSLIB.Topic({\n  ros: ros,\n  name: '/rover/gps_report',\n  messageType: 'rover/GpsCoords'\n}); // message contains the location of the rover currently\n\nlistener.subscribe(function (message) {\n  console.log('Received message on ' + listener.name + ': ' + message.latitude + \" \" + message.longitude);\n}); //Function component MapControlPanel with state RouteMode, this is the pannel\n//below\n\nexport function MapControlPanel(props) {\n  _s();\n\n  const [routeMode, setRouteMode] = useState(\"Edit Route\"); //if in edit route mode, return visibility == hidden\n\n  const visibility = routeMode === \"Edit Route\" ? \"hidden\" : \"visible\"; //onSubmit is the event that triggers addCoordinate\n\n  function addCoordinate(event) {\n    event.preventDefault();\n\n    if (event.target.longitude.value !== \"\" && event.target.latitude.value !== \"\") {\n      const newCoordinate = {\n        long: event.target.longitude.value,\n        lat: event.target.latitude.value\n      };\n      props.addMarker(newCoordinate);\n      event.target.longitude.value = \"\";\n      event.target.latitude.value = \"\";\n    }\n  }\n\n  function changeRouteMode() {\n    let newRouteMode = routeMode === \"Edit Route\" ? \"Finish Editing\" : \"Edit Route\";\n    let newUserMode = routeMode === \"Edit Route\" ? \"edit\" : \"view\";\n    setRouteMode(newRouteMode);\n    props.changeUserMode(newUserMode);\n  } //function parse csv file located at csvFilePath to be parsed into an array\n\n\n  function loadCSV() {\n    csv(csvFilePath).then(data => {\n      let csvWaypoints;\n\n      for (let i = 0; i < data.length; i++) {\n        const newCoordinate = {\n          long: data[i].lng,\n          lat: data[i].lat\n        };\n        props.addMarker(newCoordinate);\n        props.waypoints.map((newCoordinate, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            overflow: \"auto\",\n            fontSize: \"14px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Point#:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 11\n            }, this), \" \", i, \",\", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"   Latitude:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 11\n            }, this), \" \", newCoordinate.lat, \",\", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"   Longitude:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 11\n            }, this), \" \", newCoordinate.lng]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this));\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changeRouteMode,\n      children: routeMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 59\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        position: 'relative',\n        right: -90,\n        top: -22\n      },\n      onClick: loadCSV,\n      children: \" Load CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 46\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        visibility: visibility\n      },\n      onSubmit: addCoordinate,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"longitude\",\n        children: \"Longitude:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        step: \"any\",\n        id: \"longitude\",\n        name: \"longitude\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"latitude\",\n        children: \"latitude:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        step: \"any\",\n        id: \"latitude\",\n        name: \"latitude\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Add Coordinate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this), props.waypoints.map((coordinate, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflow: \"auto\",\n        fontSize: \"14px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Point#:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), \" \", idx + 1, \",\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"   Latitude:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), \" \", coordinate.lat, \",\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"   Longitude:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), \" \", coordinate.lng]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 3\n  }, this);\n}\n\n_s(MapControlPanel, \"wTtBq6AHp+SPPn6WcKJhKwcV/zk=\");\n\n_c = MapControlPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapControlPanel\");","map":{"version":3,"sources":["/home/shivamdesai/Desktop/rover/react-rover-ui/src/components/MapControlPanel.js"],"names":["React","Component","useState","useEffect","EventEmitter2","ROSLIB","csv","csvFilePath","MapView","ros","Ros","url","on","console","log","error","listener","Topic","name","messageType","subscribe","message","latitude","longitude","MapControlPanel","props","routeMode","setRouteMode","visibility","addCoordinate","event","preventDefault","target","value","newCoordinate","long","lat","addMarker","changeRouteMode","newRouteMode","newUserMode","changeUserMode","loadCSV","then","data","csvWaypoints","i","length","lng","waypoints","map","overflow","fontSize","position","right","top","coordinate","idx"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,aAAP,MAA0B,eAA1B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,GAAT,QAAoB,IAApB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAOA,IAAIC,GAAG,GAAG,IAAIJ,MAAM,CAACK,GAAX,CAAe;AACvBC,EAAAA,GAAG,EAAG;AADiB,CAAf,CAAV;AAIAF,GAAG,CAACG,EAAJ,CAAO,YAAP,EAAqB,YAAW;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD,CAFD;AAIAL,GAAG,CAACG,EAAJ,CAAO,OAAP,EAAgB,UAASG,KAAT,EAAgB;AAC9BF,EAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ,EAAsDC,KAAtD;AACD,CAFD;AAIAN,GAAG,CAACG,EAAJ,CAAO,OAAP,EAAgB,YAAW;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACD,CAFD;AAIA,IAAIE,QAAQ,GAAG,IAAIX,MAAM,CAACY,KAAX,CAAiB;AAC9BR,EAAAA,GAAG,EAAGA,GADwB;AAE9BS,EAAAA,IAAI,EAAG,mBAFuB;AAG9BC,EAAAA,WAAW,EAAE;AAHiB,CAAjB,CAAf,C,CAMA;;AACAH,QAAQ,CAACI,SAAT,CAAmB,UAASC,OAAT,EAAkB;AACnCR,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBE,QAAQ,CAACE,IAAlC,GAAyC,IAAzC,GAAgDG,OAAO,CAACC,QAAxD,GAAmE,GAAnE,GAAyED,OAAO,CAACE,SAA7F;AACD,CAFD,E,CAOA;AACA;;AACA,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;AAAA;;AACpC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BzB,QAAQ,CAAC,YAAD,CAA1C,CADoC,CAIpC;;AACA,QAAM0B,UAAU,GAAGF,SAAS,KAAK,YAAd,GAA6B,QAA7B,GAAuC,SAA1D,CALoC,CAOpC;;AACA,WAASG,aAAT,CAAuBC,KAAvB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAGD,KAAK,CAACE,MAAN,CAAaT,SAAb,CAAuBU,KAAvB,KAAiC,EAAjC,IAAuCH,KAAK,CAACE,MAAN,CAAaV,QAAb,CAAsBW,KAAtB,KAAgC,EAA1E,EAA6E;AAC3E,YAAMC,aAAa,GAAG;AAACC,QAAAA,IAAI,EAAEL,KAAK,CAACE,MAAN,CAAaT,SAAb,CAAuBU,KAA9B;AAAqCG,QAAAA,GAAG,EAAEN,KAAK,CAACE,MAAN,CAAaV,QAAb,CAAsBW;AAAhE,OAAtB;AACAR,MAAAA,KAAK,CAACY,SAAN,CAAgBH,aAAhB;AACAJ,MAAAA,KAAK,CAACE,MAAN,CAAaT,SAAb,CAAuBU,KAAvB,GAA+B,EAA/B;AACAH,MAAAA,KAAK,CAACE,MAAN,CAAaV,QAAb,CAAsBW,KAAtB,GAA8B,EAA9B;AACD;AACF;;AAED,WAASK,eAAT,GAA2B;AACzB,QAAIC,YAAY,GAAGb,SAAS,KAAK,YAAd,GAA6B,gBAA7B,GAAgD,YAAnE;AACA,QAAIc,WAAW,GAAGd,SAAS,KAAK,YAAd,GAA6B,MAA7B,GAAsC,MAAxD;AACAC,IAAAA,YAAY,CAACY,YAAD,CAAZ;AACAd,IAAAA,KAAK,CAACgB,cAAN,CAAqBD,WAArB;AACD,GAvBmC,CAyBpC;;;AACA,WAASE,OAAT,GAAkB;AAChBpC,IAAAA,GAAG,CAACC,WAAD,CAAH,CAAiBoC,IAAjB,CAAsBC,IAAI,IAAI;AAC5B,UAAIC,YAAJ;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,IAAI,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EAAoC;AAClC,cAAMZ,aAAa,GAAG;AAACC,UAAAA,IAAI,EAAES,IAAI,CAACE,CAAD,CAAJ,CAAQE,GAAf;AAAoBZ,UAAAA,GAAG,EAAEQ,IAAI,CAACE,CAAD,CAAJ,CAAQV;AAAjC,SAAtB;AACAX,QAAAA,KAAK,CAACY,SAAN,CAAgBH,aAAhB;AACAT,QAAAA,KAAK,CAACwB,SAAN,CAAgBC,GAAhB,CAAoB,CAAChB,aAAD,EAAgBY,CAAhB,kBAClB;AAAK,UAAA,KAAK,EAAE;AAACK,YAAAA,QAAQ,EAAE,MAAX;AAAmBC,YAAAA,QAAQ,EAAE;AAA7B,WAAZ;AAAA,kCACF;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,OAC4BN,CAD5B,oBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,OAEiCZ,aAAa,CAACE,GAF/C,oBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,OAGkCF,aAAa,CAACc,GAHhD;AAAA;AAAA;AAAA;AAAA;AAAA,kBADE,eAKK;AAAA;AAAA;AAAA;AAAA,kBALL;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AASD;AACF,KAfD;AAgBD;;AAED,sBACA;AAAA,4BAEE;AAAQ,MAAA,OAAO,EAAEV,eAAjB;AAAA,gBAAmCZ;AAAnC;AAAA;AAAA;AAAA;AAAA,YAFF,eAEwD;AAAA;AAAA;AAAA;AAAA,YAFxD,eAIE;AAEE,MAAA,KAAK,EAAI;AACP2B,QAAAA,QAAQ,EAAE,UADH;AAEPC,QAAAA,KAAK,EAAG,CAAC,EAFF;AAGPC,QAAAA,GAAG,EAAE,CAAC;AAHC,OAFX;AAOE,MAAA,OAAO,EAAIb,OAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAW2C;AAAA;AAAA;AAAA;AAAA,YAX3C,eAaE;AAAM,MAAA,KAAK,EAAE;AAACd,QAAAA,UAAU,EAAEA;AAAb,OAAb;AAAwC,MAAA,QAAQ,EAAEC,aAAlD;AAAA,8BACE;AAAO,QAAA,GAAG,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,KAA1B;AAAgC,QAAA,EAAE,EAAC,WAAnC;AAA+C,QAAA,IAAI,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAO,QAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,KAA1B;AAAgC,QAAA,EAAE,EAAC,UAAnC;AAA8C,QAAA,IAAI,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,EAuBGJ,KAAK,CAACwB,SAAN,CAAgBC,GAAhB,CAAoB,CAACM,UAAD,EAAaC,GAAb,kBACnB;AAAK,MAAA,KAAK,EAAE;AAACN,QAAAA,QAAQ,EAAE,MAAX;AAAmBC,QAAAA,QAAQ,EAAE;AAA7B,OAAZ;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,OAC4BK,GAAG,GAAC,CADhC,oBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,OAEiCD,UAAU,CAACpB,GAF5C,oBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,OAGkCoB,UAAU,CAACR,GAH7C;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKS;AAAA;AAAA;AAAA;AAAA,cALT;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,CAvBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAmCC;;GAhFaxB,e;;KAAAA,e","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport EventEmitter2 from 'eventemitter2';\nimport ROSLIB from 'roslib';\nimport { csv } from 'd3';\nimport csvFilePath from './waypoints.csv';\nimport { MapView } from './MapView';\n\n\n\n\n\n\nvar ros = new ROSLIB.Ros({\n  url : 'ws://localhost:9090'\n});\n\nros.on('connection', function() {\n  console.log('Connected to websocket server');\n});\n\nros.on('error', function(error) {\n  console.log('Error connecting to websocket server: ', error);\n});\n\nros.on('close', function() {\n  console.log('Connection to websocket server closed.');\n});\n\nvar listener = new ROSLIB.Topic({\n  ros : ros,\n  name : '/rover/gps_report',\n  messageType: 'rover/GpsCoords'\n});\n\n// message contains the location of the rover currently\nlistener.subscribe(function(message) {\n  console.log('Received message on ' + listener.name + ': ' + message.latitude + \" \" + message.longitude);\n});\n\n\n\n\n//Function component MapControlPanel with state RouteMode, this is the pannel\n//below\nexport function MapControlPanel(props){\n  const [routeMode, setRouteMode] = useState(\"Edit Route\")\n\n\n  //if in edit route mode, return visibility == hidden\n  const visibility = routeMode === \"Edit Route\" ? \"hidden\": \"visible\";\n\n  //onSubmit is the event that triggers addCoordinate\n  function addCoordinate(event){\n    event.preventDefault();\n    if(event.target.longitude.value !== \"\" && event.target.latitude.value !== \"\"){\n      const newCoordinate = {long: event.target.longitude.value, lat: event.target.latitude.value};\n      props.addMarker(newCoordinate);\n      event.target.longitude.value = \"\";\n      event.target.latitude.value = \"\";\n    }\n  }\n\n  function changeRouteMode() {\n    let newRouteMode = routeMode === \"Edit Route\" ? \"Finish Editing\" : \"Edit Route\";\n    let newUserMode = routeMode === \"Edit Route\" ? \"edit\" : \"view\";\n    setRouteMode(newRouteMode);\n    props.changeUserMode(newUserMode);\n  }\n\n  //function parse csv file located at csvFilePath to be parsed into an array\n  function loadCSV(){\n    csv(csvFilePath).then(data => {\n      let csvWaypoints;\n      for(let i = 0; i < data.length; i++){\n        const newCoordinate = {long: data[i].lng, lat: data[i].lat};\n        props.addMarker(newCoordinate);\n        props.waypoints.map((newCoordinate, i) => (\n          <div style={{overflow: \"auto\", fontSize: \"14px\"}} >\n        <span>\n          <strong>Point#:</strong> {i},\n          <strong>   Latitude:</strong> {newCoordinate.lat},\n          <strong>   Longitude:</strong> {newCoordinate.lng}\n        </span><br/>\n      </div>\n        ));\n      }\n    })\n  }\n\n  return (\n  <div>\n\n    <button onClick={changeRouteMode}>{routeMode}</button><br/>\n  \n    <button \n    \n      style = {{\n        position: 'relative',\n        right : -90,\n        top: -22\n      }}\n      onClick = {loadCSV} > Load CSV</button><br/>\n \n    <form style={{visibility: visibility}}  onSubmit={addCoordinate}>\n      <label for=\"longitude\">Longitude:</label>\n      <input type=\"number\" step=\"any\" id=\"longitude\" name=\"longitude\" ></input>\n      <br></br>\n      <label for=\"latitude\">latitude:</label>\n      <input type=\"number\" step=\"any\" id=\"latitude\" name=\"latitude\"></input>\n      <br></br>\n      <input type=\"submit\" value=\"Add Coordinate\"></input>\n    </form>\n\n    {props.waypoints.map((coordinate, idx) => (\n      <div style={{overflow: \"auto\", fontSize: \"14px\"}} >\n        <span>\n          <strong>Point#:</strong> {idx+1},\n          <strong>   Latitude:</strong> {coordinate.lat},\n          <strong>   Longitude:</strong> {coordinate.lng}\n        </span><br/>\n      </div>\n    ))}\n  </div> \n  );\n  }\n"]},"metadata":{},"sourceType":"module"}